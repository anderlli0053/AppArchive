{
  "version": "6.0-25-20230621",
  "description": "FFMpeg builds of latest release branch with patches necessary for smooth integration with yt-dlp",
  "homepage": "https://github.com/yt-dlp/FFmpeg-Builds",
  "license": "MIT",
  "suggest": {
    "yt-dlp": "yt-dlp"
  },
  "architecture": {
    "64bit": {
      "url": "https://ghproxy.net/https://github.com/yt-dlp/FFmpeg-Builds/releases/download/autobuild-2023-06-21-15-32/ffmpeg-n6.0-25-g868af7d7a4-win64-gpl-6.0.zip",
      "hash": "4dee493771920b5523c074fc1218922c27305ef8f56009500f245903a4ae4468",
      "extract_dir": "ffmpeg-n6.0-25-g868af7d7a4-win64-gpl-6.0"
    },
    "32bit": {
      "url": "https://ghproxy.net/https://github.com/yt-dlp/FFmpeg-Builds/releases/download/autobuild-2023-06-21-15-32/ffmpeg-n6.0-25-g868af7d7a4-win32-gpl-6.0.zip",
      "hash": "eeafaec300b0fa3815850436dcb62915f2f262dc48ae698a496519cc9d7df57b",
      "extract_dir": "ffmpeg-n6.0-25-g868af7d7a4-win32-gpl-6.0"
    }
  },
  "bin": [
    "bin\\ffmpeg.exe",
    "bin\\ffplay.exe",
    "bin\\ffprobe.exe"
  ],
  "checkver": {
    "script": [
      "# 32-bit file is either listed above or below the 64-bit one. Therefore we need a checkver script to match it.",
      "$url = 'https://api.github.com/repos/yt-dlp/FFmpeg-Builds/releases'",
      "$regex_64bit = 'autobuild-(?<buildtime>(?<builddate>\\d{4}-\\d{2}-\\d{2})-\\d{2}-\\d{2})/(?<filename>ffmpeg-n(?<ffmpegver>[\\d.-]+)-\\w+-win64-gpl-[\\d.]+)\\.zip'",
      "$regex_32bit = $regex_64bit.replace('win64', 'win32')",
      "$cont = $(Invoke-WebRequest($url)).Content | ConvertFrom-Json",
      "$file_urls = @()",
      "$cont[1].assets | ForEach-Object { $file_urls += $_.browser_download_url }",
      "$file_urls | ForEach-Object {",
      "    if ($_ -match $regex_64bit) {",
      "        $ffmpegver = $matches.ffmpegver",
      "        $buildtime = $matches.buildtime",
      "        $builddate = $matches.builddate.Replace('-', '')",
      "        $filename64bit = $matches.filename",
      "    } elseif ($_ -match $regex_32bit) { $filename32bit = $matches.filename }",
      "}",
      "Write-Output $ffmpegver-$builddate $buildtime $filename64bit $filename32bit"
    ],
    "regex": "([\\w.-]+) (?<buildtime>[\\w.-]+) (?<filename64bit>[\\w.-]+) (?<filename32bit>[\\w.-]+)"
  },
  "autoupdate": {
    "architecture": {
      "64bit": {
        "url": "https://ghproxy.net/https://github.com/yt-dlp/FFmpeg-Builds/releases/download/autobuild-$matchBuildtime/$matchFilename64bit.zip",
        "extract_dir": "$matchFilename64bit"
      },
      "32bit": {
        "url": "https://ghproxy.net/https://github.com/yt-dlp/FFmpeg-Builds/releases/download/autobuild-$matchBuildtime/$matchFilename32bit.zip",
        "extract_dir": "$matchFilename32bit"
      }
    }
  }
}