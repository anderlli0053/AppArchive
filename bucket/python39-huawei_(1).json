{
 "architecture": {
  "32bit": {
   "hash": "md5:41566bd99961047c8332d46bd3dd90fc",
   "url": "https://repo.huaweicloud.com/python/3.9.9/python-3.9.9.exe#/setup.exe"
  },
  "64bit": {
   "hash": "md5:a09ef64c9ea2e7d9a04a2cafb833aa7b",
   "url": "https://repo.huaweicloud.com/python/3.9.9/python-3.9.9-amd64.exe#/setup.exe"
  }
 },
 "autoupdate": {
  "architecture": {
   "32bit": {
    "url": "https://repo.huaweicloud.com/python/$version/python-$version.exe#/setup.exe"
   },
   "64bit": {
    "url": "https://repo.huaweicloud.com/python/$version/python-$version-amd64.exe#/setup.exe"
   }
  },
  "hash": {
   "regex": "(?sm)$basename.*?$md5",
   "url": "https://www.python.org/downloads/release/python-$cleanVersion/"
  }
 },
 "bin": [
  [
   "python.exe",
   "python3"
  ],
  [
   "python.exe",
   "python39"
  ],
  "Lib\\idlelib\\idle.bat",
  [
   "Lib\\idlelib\\idle.bat",
   "idle3"
  ],
  [
   "Lib\\idlelib\\idle.bat",
   "idle39"
  ],
  "pypi-mirror.ps1"
 ],
 "checkver": {
  "regex": "(3.9.\\d+)",
  "reverse": true,
  "url": "https://repo.huaweicloud.com/python/"
 },
 "description": "A programming language that lets you work quickly and integrate systems more effectively.",
 "env_add_path": [
  "Scripts",
  "."
 ],
 "homepage": "https://www.python.org/",
 "installer": {
  "script": [
   "Expand-DarkArchive \"$dir\\setup.exe\" \"$dir\\_tmp\"",
   "@('path.msi', 'pip.msi') | ForEach-Object {",
   "    Remove-Item \"$dir\\_tmp\\AttachedContainer\\$_\"",
   "}",
   "(Get-ChildItem \"$dir\\_tmp\\AttachedContainer\\*.msi\").FullName | ForEach-Object {",
   "    # appendpath.msi does not contain any file, which causes 'msiexec /a' to fail",
   "    if($((Get-Item $_).Basename) -eq 'appendpath') { return }",
   "    Expand-MsiArchive $_ \"$dir\" ",
   "}",
   "Remove-Item \"$dir\\_tmp\", \"$dir\\setup.exe\" -Force -Recurse",
   "if ($global) {",
   "    $pathext = (env 'PATHEXT' $true) -replace ';.PYW?', ''",
   "    env 'PATHEXT' $true \"$pathext;.PY;.PYW\"",
   "}"
  ]
 },
 "license": "Python-2.0",
 "notes": "Allow applications and third-party installers to find python by running: \"$dir\\install-pep-514.reg\"",
 "persist": [
  "Scripts",
  "Lib\\site-packages"
 ],
 "post_install": [
  "python -E -s -m ensurepip -U --default-pip | Out-Null",
  "Write-Output \"`e[0m\" # Reset ansi to prevent color leak from installer",
  "sudo regedit /s \"$dir\\install-pep-514.reg\"",
  "Copy-Item \"$bucketsdir\\tian\\scripts\\python\\pypi-mirror.ps1\" \"$dir\\pypi-mirror.ps1\" -ErrorAction 'SilentlyContinue' -Force | Out-Null",
  "pwsh \"$dir\\pypi-mirror.ps1\" -m tuna | Out-Null"
 ],
 "pre_install": [
  "$py_root = \"$dir\".Replace('\\', '\\\\')",
  "$bit = '64'",
  "if ($architecture -eq '32bit') { $bit = '32' }",
  "'install-pep-514.reg', 'uninstall-pep-514.reg' | ForEach-Object {",
  "    $py_version = ($version -split '\\.')[0..1] -join '.'",
  "    $content = Get-Content \"$bucketsdir\\tian\\scripts\\python\\$_\"",
  "    $content = $content.Replace('$py_root', $py_root)",
  "    $content = $content.Replace('$py_version', $py_version)",
  "    $content = $content.Replace('$py_fullversion', $version)",
  "    $content = $content.Replace('$py_cleanVersion', $version -replace '\\.')",
  "    $content = $content.Replace('$py_arch', \"$bit\")",
  "    if ($global) {",
  "       $content = $content.Replace('HKEY_CURRENT_USER', 'HKEY_LOCAL_MACHINE')",
  "    }",
  "    Set-Content \"$dir\\$_\" $content -Encoding Ascii",
  "}"
 ],
 "uninstaller": {
  "script": [
   "if ($global) {",
   "    $pathext = (env 'PATHEXT' $true) -replace ';.PYW?', ''",
   "    env 'PATHEXT' $true \"$pathext\"",
   "}",
   "sudo regedit /s \"$dir\\uninstall-pep-514.reg\""
  ]
 },
 "version": "3.9.9"
}
