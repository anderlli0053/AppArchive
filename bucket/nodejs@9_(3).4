{
	"homepage": "https://nodejs.org",
	"version": "9.4.0",
	"license": "MIT",
	"architecture": {
		"64bit": {
			"url": "https://nodejs.org/dist/v9.4.0/node-v9.4.0-win-x64.7z",
			"hash": "7ae0a1667ac3a71579785b93978c0f6b1996af2b9a9f09fa1b14e2019848824f",
			"extract_dir": "node-v9.4.0-win-x64"
		},
		"32bit": {
			"url": "https://nodejs.org/dist/v9.4.0/node-v9.4.0-win-x86.7z",
			"hash": "38afcac73b8d8fa21724a68e7839bdb48b8cb7fcec409c09e042ce0ef41a675c",
			"extract_dir": "node-v9.4.0-win-x86"
		}
	},
	"persist": ["bin", "cache"],
	"env_add_path": [".", "bin"],
	"##": "maint!: [2019-03-17] depend on `yarn` to install and update `npm` and `npx` as the current `npm` upgrade system fails (see <https://stackoverflow.com/questions/18412129/how-can-i-update-npm-on-windows/31520672#31520672>)",
	"post_install": [
		"",
		"# install yarn, if needed; doing it here avoids a circular dependency between nodejs and yarn",
		"# * finalize current install prior to installing `yarn` (which requires nodejs) to avoid circular dependency issues",
		"env_add_path $manifest $dir $global; env_set $manifest $dir $global; save_installed_manifest $app $dir $url",
		"$null, $bucket, $null = app_parse $app ; save_install_info @{ 'architecture' = $architecture; 'url' = $url; 'bucket' = $bucket } $dir",
		"if ( -not $( get-command yarn -ea silent ) ) { scoop install rivy/yarn; }",
		"env 'PATH' $env:PATH", // reset PATH to current value; pipes current value (including `yarn` PATH additions) up to parent process
		"yarn global add npm npx",
		"# Remove broken included `npm` and `npx`; replacing them with `yarn`-installed versions",
		"$path = \"$dir\\npm\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path }",
		"$path = \"$dir\\npm.cmd\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path }",
		"$path = \"$dir\\npx\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path }",
		"$path = \"$dir\\npx.cmd\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path }",
		"$path = \"$dir\\node_modules\\npm\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path -recurse }"
	],
	"checkver": { "url": "https://nodejs.org/dist/latest/", "re": "node-v([\\d.]+)-x86.msi" },
	"autoupdate": {
		"architecture": {
			"64bit": {
				"url": "https://nodejs.org/dist/v$version/node-v$version-win-x64.7z",
				"extract_dir": "node-v$version-win-x64"
			},
			"32bit": {
				"url": "https://nodejs.org/dist/v$version/node-v$version-win-x86.7z",
				"extract_dir": "node-v$version-win-x86"
			}
		},
		"hash": { "url": "$baseurl/SHASUMS256.txt.asc" }
	}
}
